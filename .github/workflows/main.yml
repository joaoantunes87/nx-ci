name: CI
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

permissions:
  # needed for nrwl/nx-set-shas@v4 to work on main branch (https://github.com/nrwl/nx-set-shas/issues/89#issuecomment-1519178667)
  contents: read
  actions: read
  # needed for azure cli
  id-token: write

jobs:
  main:
    name: 'Main'
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Restore cached npm dependencies
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: npm-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          cmd: install --frozen-lockfile

      - name: Cache npm dependencies
        uses: actions/cache/save@v4
        with:
          path: node_modules
          key: npm-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Derive NX_BASE and NX_HEAD for Affected
        uses: nrwl/nx-set-shas@v4

      # This line is needed for nx affected to work when CI is running on a PR
      - name: Affected for PR
        if: ${{contains(github.ref, 'refs/pull/')}}
        run: git branch --track main origin/main

      - name: Lint affected projects
        run: yarn nx affected -t lint --parallel=3

      - name: Type check affected projects
        run: yarn nx affected -t type-check --parallel=3

      - name: Build affected projects
        run: yarn nx affected -t build --parallel=3 --exclude='libs/*'

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy_production_job:
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed'))
    needs: main
    runs-on: ubuntu-latest
    environment: production
    name: Deploy production

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore cached npm dependencies
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: npm-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Derive NX_BASE and NX_HEAD for Affected
        uses: nrwl/nx-set-shas@v4

      - name: Sets Azure environment production for deploy when in main
        run: echo "AZURE_ENVIRONMENT=production" >> $GITHUB_ENV

      - name: Deploy affected apps to Azure
        env:
          AZURE_TOKEN_APP_ONE: ${{ secrets.AZURE_TOKEN_APP_ONE }}
          AZURE_TOKEN_APP_TWO: ${{ secrets.AZURE_TOKEN_APP_TWO }}
        run: yarn nx affected -t deploy-azure --parallel=1

  deploy_staging_job:
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed'))
    needs: main
    runs-on: ubuntu-latest
    environment: staging
    name: Deploy staging/preview

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore cached npm dependencies
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: npm-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Derive NX_BASE and NX_HEAD for Affected
        uses: nrwl/nx-set-shas@v4

      - name: Sets Azure environment preview
        if: contains(github.ref, 'refs/pull/')
        run: echo "AZURE_ENVIRONMENT=$(echo "$GITHUB_HEAD_REF" | sed 's/[^[:alnum:]]//g' | cut -c1-16)" >> $GITHUB_ENV

      - name: Sets Azure environment production for deploy when in main
        if: github.ref == 'refs/heads/main'
        run: echo "AZURE_ENVIRONMENT=production" >> $GITHUB_ENV

      - name: Deploy affected apps to Azure
        env:
          AZURE_TOKEN_APP_ONE: ${{ secrets.AZURE_TOKEN_APP_ONE }}
          AZURE_TOKEN_APP_TWO: ${{ secrets.AZURE_TOKEN_APP_TWO }}
        run: yarn nx affected -t deploy-azure --parallel=1

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore cached npm dependencies
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: npm-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Derive NX_BASE and NX_HEAD for Affected
        uses: nrwl/nx-set-shas@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Sets Azure environment preview
        run: echo "AZURE_ENVIRONMENT=$(echo "$GITHUB_HEAD_REF" | sed 's/[^[:alnum:]]//g' | cut -c1-16)" >> $GITHUB_ENV

      - name: Delete deployed preview web apps for affected apps on Azure
        env:
          AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
          AZURE_APP_ONE_NAME: ${{ vars.AZURE_APP_ONE_NAME }}
          AZURE_APP_TWO_NAME: ${{ vars.AZURE_APP_TWO_NAME }}
        run: yarn nx affected -t delete-azure-environment --parallel=1
